name: OpenTofu GKE Provision

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  opentofu:
    name: OpenTofu Apply for GKE
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./gcp-key.json

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          version: 1.7.5

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 3.12.0

      - name: Write GCP key
        working-directory: terraform/
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "${GCP_CREDENTIALS}" > "${GOOGLE_APPLICATION_CREDENTIALS}"
          gcloud auth activate-service-account --key-file="${GOOGLE_APPLICATION_CREDENTIALS}"

      - name: OpenTofu Init
        working-directory: terraform/
        run: |
          tofu init -input=false

      - name: OpenTofu Plan
        working-directory: terraform/
        run: |
          tofu plan -input=false -out=tfplan

      - name: OpenTofu Apply
        if: github.ref == 'refs/heads/main'
        working-directory: terraform/
        run: |
          tofu apply -auto-approve -input=false "tfplan"

      - name: Configure GKE credentials
        run: |
          gcloud container clusters get-credentials terraform-gke-gpt-cluster \
          --zone us-central1-a \
          --project terraform-gke-gpt

      - name: Configure docker for artifact repository
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push gpt service Docker image
        working-directory: apps/gpt/
        run: |
          IMAGE="us-central1-docker.pkg.dev/us-central1-docker.pkg.dev/gke-repo/gpt:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          helm upgrade --install gpt ./helm --namespace default --set image.repository="${IMAGE%:*}" --set image.tag="${IMAGE##*:}"